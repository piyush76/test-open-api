# Server configuration
server.port=8080

# H2 Database configuration
spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# OpenAPI configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Security configuration (use environment variables in production)
spring.security.user.name=${SECURITY_USER_NAME:user}
spring.security.user.password=${SECURITY_USER_PASSWORD:password}
spring.security.user.roles=${SECURITY_USER_ROLES:USER}

# SQL Queries
userops.sql.getUserOpsEntity=SELECT personnel_id, company_id, ops_entity_id, ops_company_id, admin_role FROM user_ops_entity WHERE personnel_id = ? AND company_id = ?
userops.sql.updateOpsEntityAdminRole=UPDATE user_ops_entity SET admin_role = ? WHERE personnel_id = ? AND company_id = ?

# User Inventory Group SQL Queries
userinventory.sql.getUserInventoryGroup=SELECT company_id, personnel_id, inventory_group, hub, ops_entity_id, ops_company_id, admin_role FROM user_inventory_group WHERE company_id = ? AND personnel_id = ? AND inventory_group = ?
userinventory.sql.updateUserInventoryGroupAdminRole=UPDATE user_inventory_group SET admin_role = ? WHERE company_id = ? AND personnel_id = ? AND inventory_group = ?

# User Pages SQL Queries
userpages.sql.getUserPages=SELECT user_id, company_id, page_id, page_name, access_level, page_url FROM user_pages WHERE user_id = ? AND company_id = ?
userpages.sql.saveUserPage=INSERT INTO user_pages (user_id, company_id, page_id, page_name, access_level, page_url) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE page_name = VALUES(page_name), access_level = VALUES(access_level), page_url = VALUES(page_url)
userpages.sql.deleteUserPage=DELETE FROM user_pages WHERE user_id = ? AND company_id = ? AND page_id = ?

# Logging
logging.level.org.jooq=DEBUG
logging.level.com.userops.api=DEBUG
